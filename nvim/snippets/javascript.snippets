# prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# function
snippet fun
	function ${1:function_name}(${2:argument}) {
		${3:// body...}
	}
# Function = 
snippet fun=
	var ${1:function_name} = function(${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if(${1:true}) {${2}};
# if ... else
snippet ife
	if(${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet ifin
	${1:/* condition */} && ${3:a}

snippet ift
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */}lert 
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet setT
	setTimeout(() => {${2:body}}, ${1:time});
# setInterval function
snippet setI
	setInterval(function(){${2:body}}, ${1:time});
# Get Elements
snippet getElem
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}

#jquery
snippet $
	$('${1:Name}').
snippet $fun
	var ${1:Name} = function(${2:argument}){
		$('${1:Name}').
	}

#alert 
snippet al
	alert(${1});

#console.log
snippet con
	console.log(${1});

# Lorem ipsum
snippet Lorem
	Duis ullamcorper ut dui nec sodales. Morbi eget tincidunt justo. Nam eros magna, venenatis vitae nisi ullamcorper, convallis euismod ex. Cras pharetra metus id eros aliquet sollicitudin.

# React Snippets
snippet Text
    <Text style={${1:Name}}></Text>
snippet View
    <View style={${1:Name}}></View>
snippet Touch
    <TouchableOpacity style={${1:Name}} onPress={${2:Name}}></TouchableOpacity>
